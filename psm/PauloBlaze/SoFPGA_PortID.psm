; Generate by synthesis for 'System on FPGA'
;
; This file contains the PicoBlaze PortNumber to DeviceRegister mappings.
; =======================================================================
;
; Reset Circuit
CONSTANT OPORT_RESET_RESET,                        0'd    ; Reset
CONSTANT KPORT_RESET_RESET,                        0'd    ; Reset
;
; Instruction ROM
CONSTANT IPORT_INSTROM_PAGENUMBER,                 1'd    ; PageNumber(dummy[3:0],dummy[7:4])
CONSTANT OPORT_INSTROM_PAGENUMBER,                 1'd    ; PageNumber
CONSTANT KPORT_INSTROM_PAGENUMBER,                 1'd    ; PageNumber
;
; Interrupt Controller (16 ports)
CONSTANT OPORT_INTC_INTENABLE0,                    4'd    ; IntEnable0
CONSTANT KPORT_INTC_INTENABLE0,                    4'd    ; IntEnable0
CONSTANT OPORT_INTC_INTENABLE1,                    5'd    ; IntEnable1
CONSTANT KPORT_INTC_INTENABLE1,                    5'd    ; IntEnable1
CONSTANT OPORT_INTC_INTDISABLE0,                   6'd    ; IntDisable0
CONSTANT KPORT_INTC_INTDISABLE0,                   6'd    ; IntDisable0
CONSTANT OPORT_INTC_INTDISABLE1,                   7'd    ; IntDisable1
CONSTANT KPORT_INTC_INTDISABLE1,                   7'd    ; IntDisable1
CONSTANT IPORT_INTC_INTMASK0,                      4'd    ; IntMask0(dummy[3:0],dummy[7:4])
CONSTANT IPORT_INTC_INTMASK1,                      5'd    ; IntMask1(dummy[3:0],dummy[7:4])
CONSTANT IPORT_INTC_INTSOURCE,                     6'd    ; IntSource(dummy[3:0],dummy[7:4])
;
; Timer
CONSTANT OPORT_TIMER_CONTROL,                      8'd    ; Control
CONSTANT KPORT_TIMER_CONTROL,                      2'd    ; Control
CONSTANT OPORT_TIMER_MAXVALUE0,                   10'd    ; MaxValue0
CONSTANT OPORT_TIMER_MAXVALUE1,                   11'd    ; MaxValue1
CONSTANT IPORT_TIMER_CURVALUE0,                   10'd    ; CurValue0(dummy[3:0],dummy[7:4])
CONSTANT IPORT_TIMER_CURVALUE1,                   11'd    ; CurValue1(dummy[3:0],dummy[7:4])
;
; Converter Bin2BCD (24 bit)
CONSTANT OPORT_CONVBCD24_OPERANDA0,               12'd    ; OperandA0
CONSTANT OPORT_CONVBCD24_OPERANDA1,               13'd    ; OperandA1
CONSTANT OPORT_CONVBCD24_OPERANDA2,               14'd    ; OperandA2
CONSTANT IPORT_CONVBCD24_RESULT0,                 12'd    ; Result0(dummy[3:0],dummy[7:4])
CONSTANT IPORT_CONVBCD24_RESULT1,                 13'd    ; Result1(dummy[3:0],dummy[7:4])
CONSTANT IPORT_CONVBCD24_RESULT2,                 14'd    ; Result2(dummy[3:0],dummy[7:4])
CONSTANT IPORT_CONVBCD24_STATUS,                  15'd    ; Status(dummy[3:0],dummy[7:4])
;
; Multiplier (32 bit)
CONSTANT OPORT_MULT32_OPERANDA0,                  16'd    ; OperandA0
CONSTANT OPORT_MULT32_OPERANDA1,                  17'd    ; OperandA1
CONSTANT OPORT_MULT32_OPERANDA2,                  18'd    ; OperandA2
CONSTANT OPORT_MULT32_OPERANDA3,                  19'd    ; OperandA3
CONSTANT OPORT_MULT32_OPERANDB0,                  20'd    ; OperandB0
CONSTANT OPORT_MULT32_OPERANDB1,                  21'd    ; OperandB1
CONSTANT OPORT_MULT32_OPERANDB2,                  22'd    ; OperandB2
CONSTANT OPORT_MULT32_OPERANDB3,                  23'd    ; OperandB3
CONSTANT IPORT_MULT32_RESULT0,                    16'd    ; Result0(dummy[3:0],dummy[7:4])
CONSTANT IPORT_MULT32_RESULT1,                    17'd    ; Result1(dummy[3:0],dummy[7:4])
CONSTANT IPORT_MULT32_RESULT2,                    18'd    ; Result2(dummy[3:0],dummy[7:4])
CONSTANT IPORT_MULT32_RESULT3,                    19'd    ; Result3(dummy[3:0],dummy[7:4])
CONSTANT IPORT_MULT32_RESULT4,                    20'd    ; Result4(dummy[3:0],dummy[7:4])
CONSTANT IPORT_MULT32_RESULT5,                    21'd    ; Result5(dummy[3:0],dummy[7:4])
CONSTANT IPORT_MULT32_RESULT6,                    22'd    ; Result6(dummy[3:0],dummy[7:4])
CONSTANT IPORT_MULT32_RESULT7,                    23'd    ; Result7(dummy[3:0],dummy[7:4])
;
; Divider (32 bit)
CONSTANT OPORT_DIV32_OPERANDA0,                   24'd    ; OperandA0
CONSTANT OPORT_DIV32_OPERANDA1,                   25'd    ; OperandA1
CONSTANT OPORT_DIV32_OPERANDA2,                   26'd    ; OperandA2
CONSTANT OPORT_DIV32_OPERANDA3,                   27'd    ; OperandA3
CONSTANT OPORT_DIV32_OPERANDB0,                   28'd    ; OperandB0
CONSTANT OPORT_DIV32_OPERANDB1,                   29'd    ; OperandB1
CONSTANT OPORT_DIV32_OPERANDB2,                   30'd    ; OperandB2
CONSTANT OPORT_DIV32_OPERANDB3,                   31'd    ; OperandB3
CONSTANT IPORT_DIV32_RESULT0,                     24'd    ; Result0(dummy[3:0],dummy[7:4])
CONSTANT IPORT_DIV32_RESULT1,                     25'd    ; Result1(dummy[3:0],dummy[7:4])
CONSTANT IPORT_DIV32_RESULT2,                     26'd    ; Result2(dummy[3:0],dummy[7:4])
CONSTANT IPORT_DIV32_RESULT3,                     27'd    ; Result3(dummy[3:0],dummy[7:4])
CONSTANT IPORT_DIV32_STATUS,                      31'd    ; Status(dummy[3:0],dummy[7:4])
;
; General Purpose I/O
CONSTANT IPORT_GPIO_DATAOUT,                      40'd    ; DataOut(dummy[3:0],dummy[7:4])
CONSTANT OPORT_GPIO_DATAOUT,                      40'd    ; DataOut
CONSTANT KPORT_GPIO_DATAOUT,                       8'd    ; DataOut
CONSTANT IPORT_GPIO_DATAIN,                       41'd    ; DataIn(dummy[3:0],dummy[7:4])
CONSTANT OPORT_GPIO_INTENABLE,                    41'd    ; IntEnable
;
; Bit Banging I/O
CONSTANT OPORT_BBIO8_SET,                         42'd    ; Set
CONSTANT KPORT_BBIO8_SET,                          9'd    ; Set
CONSTANT OPORT_BBIO8_CLEAR,                       43'd    ; Clear
CONSTANT KPORT_BBIO8_CLEAR,                       10'd    ; Clear
CONSTANT IPORT_BBIO8_DATAOUT,                     42'd    ; DataOut(dummy[3:0],dummy[7:4])
CONSTANT IPORT_BBIO8_DATAIN,                      43'd    ; DataIn(dummy[3:0],dummy[7:4])
;
; UART
CONSTANT OPORT_UART_COMMAND,                      46'd    ; Command
CONSTANT IPORT_UART_STATUS,                       46'd    ; Status(dummy[3:0],dummy[7:4])
CONSTANT OPORT_UART_DATAOUT,                      47'd    ; DataOut
CONSTANT KPORT_UART_DATAOUT,                      12'd    ; DataOut
CONSTANT IPORT_UART_DATAIN,                       47'd    ; DataIn(dummy[3:0],dummy[7:4])
