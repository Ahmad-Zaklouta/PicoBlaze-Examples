; EMACS settings: -*-  tab-width: 2; indent-tabs-mode: t -*-
; vim: tabstop=2:shiftwidth=2:noexpandtab
; kate: tab-width 2; replace-tabs off; indent-width 2;
; 
; ==============================================================================
; Authors:					Patrick Lehmann
;
; Assembler-Code:		
; 
; Description:
; ------------------------------------
;		TODO
;		
;
; License:
; ==============================================================================
; Copyright 2007-2015 Patrick Lehmann - Dresden, Germany
; 
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
; 
;		http://www.apache.org/licenses/LICENSE-2.0
; 
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
; ==============================================================================
;
;PRAGMA function _sendok_I2C begin
STRING Text_I2C_OK$,					"I2C Configuration successfully written to device"
;
__SendOK_I2C:									LOAD			REG_PTR_H,		LaR_OK_I2C'upper
															LOAD			REG_PTR_L,		LaR_OK_I2C'lower
															JUMP			__UART_WriteString										; tail call elimination
															;
	LaR_OK_I2C:									LOAD&RETURN REG_LAR,		Text_I2C_OK$
															LOAD&RETURN REG_LAR,		LF
															LOAD&RETURN REG_LAR,		NUL
;PRAGMA function end
;
;PRAGMA function _senderr_I2C begin
STRING Text_I2C_Error$,				"ERROR: I2C operation failed"
;
__SendErr_I2C:								LOAD			REG_PTR_H,		LaR_Err_I2C'upper
															LOAD			REG_PTR_L,		LaR_Err_I2C'lower
															JUMP			__UART_WriteString										; tail call elimination
															;
	LaR_Err_I2C:								LOAD&RETURN REG_LAR,		Text_I2C_Error$
															LOAD&RETURN REG_LAR,		LF
															LOAD&RETURN REG_LAR,		NUL
;PRAGMA function end
;
